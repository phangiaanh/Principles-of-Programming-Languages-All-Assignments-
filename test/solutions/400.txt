Program([VarDecl(a,ArrayType(IntType,99999999)),VarDecl(b,ArrayType(FloatType,0)),VarDecl(c,ArrayType(StringType,666666666666666)),FuncDecl(Id(main),[],ArrayTypePointer(IntType),Block([For(ArrayCell(Id(a),ArrayCell(Id(a),ArrayCell(Id(a),ArrayCell(Id(a),ArrayCell(Id(a),IntLiteral(45))))));CallExpr(Id(fun),[IntLiteral(3)]);ArrayCell(Id(a),CallExpr(Id(fun),[ArrayCell(Id(a),CallExpr(Id(fun),[ArrayCell(Id(a),CallExpr(Id(fun),[]))]))]));Block([For(BinaryOp(*,Id(a),BinaryOp(*,Id(a),BinaryOp(*,Id(a),BinaryOp(*,Id(a),IntLiteral(3)))));BinaryOp(-,Id(a),BinaryOp(-,Id(a),BinaryOp(-,Id(a),BinaryOp(-,Id(a),IntLiteral(4)))));BinaryOp(+,Id(a),BinaryOp(+,Id(a),BinaryOp(+,Id(a),BinaryOp(+,Id(a),BinaryOp(+,Id(a),IntLiteral(5))))));Block([If(BinaryOp(/,BinaryOp(/,BinaryOp(/,BinaryOp(/,BinaryOp(/,BinaryOp(/,Id(a),IntLiteral(3)),IntLiteral(4)),IntLiteral(5)),IntLiteral(6)),IntLiteral(7)),IntLiteral(8)),Block([CallExpr(Id(createString),[BinaryOp(-,BinaryOp(*,Id(a),ArrayCell(Id(b),ArrayCell(Id(b),ArrayCell(Id(b),ArrayCell(Id(b),ArrayCell(Id(b),IntLiteral(3))))))),CallExpr(Id(a),[CallExpr(Id(a),[CallExpr(Id(a),[CallExpr(Id(a),[IntLiteral(3)])])])]))]),For(BinaryOp(=,Id(i),ArrayCell(Id(a),BinaryOp(=,Id(i),ArrayCell(Id(a),BinaryOp(=,Id(i),ArrayCell(Id(a),BinaryOp(=,Id(i),ArrayCell(Id(a),IntLiteral(3)))))))));BinaryOp(&&,BinaryOp(>=,Id(i),IntLiteral(0)),BinaryOp(-,Id(b),BinaryOp(*,Id(c),ArrayCell(Id(a),IntLiteral(2)))));BinaryOp(=,Id(i),BinaryOp(+,Id(i),ArrayCell(Id(a),BinaryOp(+,Id(i),ArrayCell(Id(a),BinaryOp(+,Id(i),ArrayCell(Id(a),BinaryOp(+,Id(i),ArrayCell(Id(a),IntLiteral(3))))))))));Block([Dowhile([Dowhile([For(ArrayCell(Id(a),ArrayCell(Id(a),ArrayCell(Id(a),IntLiteral(3))));CallExpr(Id(foo),[CallExpr(Id(foo),[CallExpr(Id(foo),[IntLiteral(3)])])]);ArrayCell(Id(a),CallExpr(Id(foo),[ArrayCell(Id(a),CallExpr(Id(foo),[]))]));CallExpr(Id(printf),[StringLiteral(Hope you passed this)]))],BinaryOp(=,BinaryOp(==,Id(a),Id(b)),BinaryOp(=,Id(c),BinaryOp(=,Id(d),Id(e)))))],BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,Id(a),Id(a)),Id(a)),Id(a)),Id(a)),Id(a)),Id(a)),Id(a)),Id(a)),Id(a)),Id(a)),Id(a)))]))]),Block([Dowhile([For(CallExpr(Id(a),[Id(a)]);CallExpr(Id(b),[Id(b)]);ArrayCell(Id(c),ArrayCell(Id(c),ArrayCell(Id(c),ArrayCell(Id(c),ArrayCell(Id(c),ArrayCell(Id(c),Id(c)))))));Block([Dowhile([If(BinaryOp(||,BinaryOp(||,BinaryOp(==,Id(condition),BooleanLiteral(true)),BooleanLiteral(false)),BinaryOp(&&,Id(notTrueOrFalse),ArrayCell(Id(condition),BooleanLiteral(true)))),Block([CallExpr(Id(createWorld),[BinaryOp(+,StringLiteral(Hello World),ArrayCell(StringLiteral(HelloW World),BinaryOp(+,StringLiteral(Hello World),ArrayCell(Id(_),ArrayCell(Id(_),ArrayCell(Id(_),Id(_)))))))])])),Dowhile([CallExpr(Id(makeThis),[CallExpr(Id(makeThis),[CallExpr(Id(makeThis),[])])]),ArrayCell(Id(makeThat),ArrayCell(Id(makeThat),ArrayCell(Id(makeThat),Id(expression)))),Dowhile([Block([For(BinaryOp(-,Id(i),ArrayCell(Id(i),BinaryOp(-,Id(i),ArrayCell(Id(i),BinaryOp(-,Id(i),ArrayCell(Id(i),BinaryOp(-,Id(i),ArrayCell(Id(i),IntLiteral(3)))))))));Id(something);Id(something);Block([Return(CallExpr(Id(foo),[BinaryOp(*,BinaryOp(*,BinaryOp(*,BinaryOp(*,BinaryOp(*,BinaryOp(*,BinaryOp(*,BinaryOp(*,BinaryOp(*,BinaryOp(*,BinaryOp(*,Id(A),Id(A)),Id(A)),Id(A)),Id(A)),Id(A)),Id(A)),Id(A)),Id(A)),Id(A)),Id(A)),Id(A))]))]))])],BooleanLiteral(true))],BooleanLiteral(true))],BooleanLiteral(true))])),Dowhile([Dowhile([Block([For(Id(something);Id(something);Id(something);Block([If(Id(thisIsTrue),CallExpr(Id(printf),[StringLiteral(Well done)]),CallExpr(Id(printf),[StringLiteral(Try again)]))]))])],BooleanLiteral(true))],BooleanLiteral(true))],BooleanLiteral(true))]))])),If(BinaryOp(=,Id(A),BinaryOp(=,Id(B),BinaryOp(=,Id(C),BinaryOp(=,Id(D),Id(a))))),Block([For(Id(something);Id(something);Id(something);Block([For(Id(something);Id(something);Id(something);Block([If(Id(youCanMakeThis),Block([CallExpr(Id(printf),[StringLiteral(Congratulations!)]),CallExpr(Id(printf),[StringLiteral(Well done!)])]))]))]))]))]))]))])